#!/bin/sh
if [ "$1" = '-h' ]; then cat <<EOF
Usage: ./napi [ <URL> | -h ]
Without parameters, napi retrieves webpage http://napirajz.hu, downloads the
comics to the working dir and creates index.html with links to them.
When called with an archive URL, like http://napirajz/hu/archives/2006/01/,
napi does the same for that, creating webpage 2006_01.html.
In case of an archive URL an existing file is not overwritten.
In both cases the name of the created filename is printed to stdout.
ATTENTION developer: do not print anything else to stdout!!!
EOF
exit 0
fi

# Get archive URL in arg1, otherwise generate main page. Generate filename.
URL=$1 && echo >&2 "****************** napi debug message *******************"
if [ -n "$URL" ]; then
  MONTH=`echo $URL | sed -r 's,^.+([0-9]{4})/([0-9]{2}).+$,\1_\2,'`
  FILE="${MONTH}.html"
  [ -f $FILE ] && echo >&2 "$FILE already exists." && echo $FILE && exit 0
else
  URL="http://napirajz.hu/"
  FILE="index.html"
fi
echo >&2 "$FILE from $URL"

# Try to retrieve webpage, or exit to avoid deleting data
curl -f ${URL} >tmp 2>/dev/null || exit 1 

# Get picture URLs, try different patterns
while true; do
  PICS=`cat tmp | sed -nr 's,^[ \t<p>]*<img src=\"(/[fF]iles/[/A-Za-z0-9_.]+)\".+\r?$,http://napirajz.hu\1,p'`
  [ -n "$PICS" ] && echo >&2 "regex 1" && break
  PICS=`cat tmp | sed -nr 's,^[ \t<p>]*<img src=\"(http://napirajz.freeblog.hu/[fF]iles/[A-Za-z0-9_.]+)\".+\r?$,\1,p'`
  [ -n "$PICS" ] && echo >&2 "regex 2" && break
  PICS=`cat tmp | sed -nr 's,^[ \t<p>]*<img src=\"(http://napirajz.hu/[fF]iles/[A-Za-z0-9_.]+)\".+\r?$,\1,p'`
  [ -n "$PICS" ] && echo >&2 "regex 3" && break
                    echo >&2 "regex -" && exit 1
done
echo >&2 $PICS

# Get video URLs
VIDS=`cat tmp | sed -nr 's,^.*(<iframe.+youtube.+iframe>).*$,\1<br>,p'`

# Print page header
which perl >/dev/null && EXTENSION=pl || EXTENSION=cgi
cat > $FILE <<HEADER
<html><head><title>subogero napi $MONTH </title></head><body>
<a href="index.html">napi</a>
<a href="tegnapi.html">tegnapi</a>
<a href="komedia.html">kom&eacute;dia</a>
<a href="keres.${EXTENSION}">keres</a>
<hr><h3 align="center">subogero napi $MONTH </h3><hr>
HEADER

# Get pictures and print links to copies
uname -a | grep -i wrt >/dev/null || WGETOPT=-nc
for i in $PICS; do
  wget ${WGETOPT} "${i}"
  echo $i \
  | sed -r 's,^.+/([-A-Za-z0-9_]+)(\.[jpegJPG]+)$,<a href=\"mutat.pl?rajz=\1\2\">\1</a><br>,' \
  >> $FILE
done

# Print embedded videos
echo $VIDS >> $FILE

# Print page footer
cat >> $FILE <<FOOTER
<hr> (c) CC - Mer&eacute;nyi D&aacute;niel
<br>Eredeti: h t t p : / / n a p i r a j z . h u
<p>Ez az oldal azok sz&aacute;m&aacute;ra k&eacute;sz&uuml;lt,
akiket a c&eacute;ges internet proxy megfosztott a napi rajz
ny&uacute;jtotta inspir&aacute;ci&oacute;t&oacute;l.
<hr>Friss&iacute;tve: `date "+%Y.%m.%d - %H:%M"`
<br><small><a href="http://github.com/subogero">github.com/subogero</a></small>
</body></html>
FOOTER

# Return value is generated filename
echo $FILE

